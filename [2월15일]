package asd;

import java.util.Arrays;

public class asdasd {

	public static void main(String[] args) {
		
		// 문제1. [문제1] 가장 큰 수 (16점, 제한시간 1초)
//			7개의 자연수가 주어질 때, 이들 중에서 홀수로서 가장 큰 수와 짝수로서 가장 큰 수를 각각 찾아 그 합을 구하는 프로그램을 작성하시오.
//			예를 들어, 67, 18, 97, 34, 78, 97, 9가 주어지면 이들 중 홀수는 67, 97, 97, 9이며, 그 중에서 가장 큰 수는 97이다.
//			또한 짝수는 18, 34, 78이며 이 중에서 가장 큰 수는 78이다. 따라서 합은 97 + 78 = 175가 된다.
//			입력에 홀수(또는 짝수)가 존재하지 않는 경우에는 짝수(또는 홀수)만을 계산한다
		
		int arr[] = {15, 20, 36, 98, 47, 56, 73};
		
		int a = 0;
		int b = 0;
		
		for(int i= 0; i<arr.length; i++) {
			if(arr[i] %2 == 0) {
				if(arr[i] > a) {
					a = arr[i];
				}
			} else {
				if(arr[i] > b) {
					b = arr[i];
				}
			}
		}
		
		System.out.println("합 : "+(a+b));
		
		// 문제 2.[문제1] 중앙값 (16점, 제한시간 1초)
//			중앙값(median)은 어떤 주어진 값들을 정렬했을 때 가장 중앙에 위치하는 값을 의미한다. 예를 들어 1, 2, 100의 세 값이 있을 때, 2가 가장 중앙에 있기 때문에 2가 중앙값이다.
//			값이 짝수개일 때에는 중앙값이 유일하지 않고 두 개가 될 수도 있다. 이 경우 그 두 값의 평균을 취한다. 예를 들어 1, 10, 90, 200 네 수의 중앙값은 10과 90의 평균인 50이 된다.
//			5개의 자연수가 주어질 때, 중앙값을 찾아내는 프로그램을 작성하시오.
//			예를 들어, 다음의 수에 대하여 중앙값은,
//			57 34 87 83 47
//			크기 순서상으로 57이 가운데 있고 이 값이 중앙값이 된다.
		
		int arr1[] = {58, 35, 77, 59, 68};

		Arrays.sort(arr1);
		
		
		if(arr1.length%2 == 0) {
			System.out.println((arr1[arr1.length/2]+arr1[(arr1.length/2)-1])/2);
		}else {
			System.out.println(arr1[arr1.length/2]);
		}
		
	
		
	}
}
